import { HttpInfo } from '../http/http';
import { Configuration } from '../configuration';
import { ActionResponseWithSingleResultURI } from '../models/ActionResponseWithSingleResultURI';
import { PublicExportRequest } from '../models/PublicExportRequest';
import { TaskLocator } from '../models/TaskLocator';
import { PublicExportsApiRequestFactory, PublicExportsApiResponseProcessor } from "../apis/PublicExportsApi";
export interface PublicExportsApiGetStatusRequest {
    taskId: number;
}
export interface PublicExportsApiStartRequest {
    publicExportRequest: PublicExportRequest;
}
export declare class ObjectPublicExportsApi {
    private api;
    constructor(configuration: Configuration, requestFactory?: PublicExportsApiRequestFactory, responseProcessor?: PublicExportsApiResponseProcessor);
    getStatusWithHttpInfo(param: PublicExportsApiGetStatusRequest, options?: Configuration): Promise<HttpInfo<ActionResponseWithSingleResultURI>>;
    getStatus(param: PublicExportsApiGetStatusRequest, options?: Configuration): Promise<ActionResponseWithSingleResultURI>;
    startWithHttpInfo(param: PublicExportsApiStartRequest, options?: Configuration): Promise<HttpInfo<TaskLocator>>;
    start(param: PublicExportsApiStartRequest, options?: Configuration): Promise<TaskLocator>;
}
